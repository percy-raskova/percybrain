#!/bin/bash
#
# PercyBrain Pre-Commit Hook
# Runs StyLua formatting check and Selene linting
#

# Allow skipping with SKIP_HOOKS=1
if [ -n "$SKIP_HOOKS" ]; then
  echo "⊘ Skipping pre-commit hooks (SKIP_HOOKS=1)"
  exit 0
fi

# Colors
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

echo ""
echo -e "${BLUE}🔍 Running pre-commit validation...${NC}"
echo ""

HAS_ERRORS=false

# Get list of staged Lua files
STAGED_LUA_FILES=$(git diff --cached --name-only --diff-filter=ACM | grep '\.lua$' || true)

if [ -z "$STAGED_LUA_FILES" ]; then
  echo -e "${GREEN}✓ No Lua files staged${NC}"
  exit 0
fi

echo "Checking $(echo "$STAGED_LUA_FILES" | wc -l) Lua file(s)..."
echo ""

#
# 1. StyLua formatting check
#
echo -e "${YELLOW}[1/2] Checking formatting (StyLua)...${NC}"

if ! command -v stylua &> /dev/null; then
  echo -e "${YELLOW}⚠ StyLua not installed, skipping format check${NC}"
  echo "  Install: ./scripts/install-lua-tools.sh"
else
  if stylua --check $STAGED_LUA_FILES 2>&1; then
    echo -e "${GREEN}✓ Formatting is correct${NC}"
  else
    echo -e "${RED}✗ Formatting issues detected${NC}"
    echo ""
    echo "Fix with: ${BLUE}stylua $STAGED_LUA_FILES${NC}"
    echo "Then stage changes: ${BLUE}git add $STAGED_LUA_FILES${NC}"
    HAS_ERRORS=true
  fi
fi
echo ""

#
# 2. Selene linting
#
echo -e "${YELLOW}[2/2] Linting code (Selene)...${NC}"

if ! command -v selene &> /dev/null; then
  echo -e "${YELLOW}⚠ Selene not installed, skipping lint check${NC}"
  echo "  Install: ./scripts/install-lua-tools.sh"
else
  if selene $STAGED_LUA_FILES 2>&1; then
    echo -e "${GREEN}✓ No linting issues${NC}"
  else
    echo -e "${RED}✗ Linting issues detected${NC}"
    echo ""
    echo "Fix issues above before committing"
    HAS_ERRORS=true
  fi
fi
echo ""

# Final result
if [ "$HAS_ERRORS" = true ]; then
  echo -e "${RED}╔════════════════════════════════════╗${NC}"
  echo -e "${RED}║  ❌ PRE-COMMIT VALIDATION FAILED   ║${NC}"
  echo -e "${RED}╚════════════════════════════════════╝${NC}"
  echo ""
  echo "Fix errors above or skip with: ${YELLOW}SKIP_HOOKS=1 git commit${NC}"
  exit 1
fi

echo -e "${GREEN}╔════════════════════════════════════╗${NC}"
echo -e "${GREEN}║  ✅ PRE-COMMIT VALIDATION PASSED   ║${NC}"
echo -e "${GREEN}╚════════════════════════════════════╝${NC}"
echo ""

exit 0
