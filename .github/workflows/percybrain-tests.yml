name: PercyBrain Simple Tests

on:
  push:
    branches: ['**']
    paths:
      - 'lua/**/*.lua'
      - 'tests/**'
      - '.github/workflows/percybrain-tests.yml'
  pull_request:
    branches: [main, master]
    paths:
      - 'lua/**/*.lua'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Neovim
        uses: rhysd/action-setup-vim@v1
        with:
          neovim: true
          version: stable

      - name: Cache Lua tools
        id: cache-lua-tools
        uses: actions/cache@v4
        with:
          path: ~/.local/bin
          key: lua-tools-${{ runner.os }}-stylua-2.3.0-selene-0.29.0

      - name: Install Lua quality tools
        if: steps.cache-lua-tools.outputs.cache-hit != 'true'
        run: |
          chmod +x scripts/install-lua-tools.sh
          ./scripts/install-lua-tools.sh --ci

      - name: Add tools to PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Verify tool installation
        run: |
          echo "=== Tool Verification ==="
          which stylua || echo "stylua not in PATH"
          which selene || echo "selene not in PATH"
          stylua --version || echo "stylua failed"
          selene --version || echo "selene failed"
          echo "=== PATH ==="
          echo "$PATH"
          echo "=== ~/.local/bin contents ==="
          ls -lah ~/.local/bin/ || echo "Directory not found"

      - name: Run simplified test suite
        id: tests
        run: |
          echo "::group::Simple Tests"
          chmod +x tests/simple-test.sh
          cd tests
          ./simple-test.sh
          echo "::endgroup::"

      - name: Comment test results on PR
        if: always() && github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const testStatus = '${{ steps.tests.outcome }}';
            const icon = testStatus === 'success' ? '‚úÖ' : '‚ùå';

            let comment = `## ${icon} PercyBrain Tests - ${testStatus}\\n\\n`;

            if (testStatus === 'success') {
              comment += '**All tests passed!** Code is clean and ready to merge. üéâ\\n\\n';
              comment += '- Lua syntax valid\\n';
              comment += '- All 75 Lua files formatted correctly\\n';
              comment += '- No linting errors\\n';
              comment += '- Core config loads without errors';
            } else {
              comment += '**Some tests failed.** Please check the logs above.\\n\\n';
              comment += '**Fix locally:**\\n';
              comment += '```bash\\n';
              comment += 'cd tests\\n';
              comment += './simple-test.sh\\n';
              comment += '```\\n';
            }

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
